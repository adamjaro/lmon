
#visualization according to B4 example

#OpenGL view:
/vis/open OGL 600x600-0+0

# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors
#/vis/viewer/set/background 1 1 1 0.
#/vis/viewer/set/lightsThetaPhi 120. 135. deg
#
# Draw geometry:
/vis/drawVolume
#
# Specify view angle:
/vis/viewer/set/viewpointThetaPhi 90. 180.

#/vis/viewer/set/targetPoint 0 0 -2170 cm # exit window flat
#/vis/viewer/set/targetPoint 0 0 -2025 cm # exit window tilt
#/vis/viewer/set/targetPoint 0 0 -2137 cm # collimator
#/vis/viewer/set/targetPoint 0 0 -2250 cm # magnet
#/vis/viewer/set/targetPoint 0 0 -3185 cm # photon detector
#/vis/viewer/set/targetPoint 0 0 -3135 cm # spectrometer detectors
/vis/viewer/set/targetPoint 0 0 -9.504 meter # B2eR magnet
#/vis/viewer/set/targetPoint 0 0 -5.297 meter # Q1eR magnet
#/vis/viewer/set/targetPoint 40 0 -2700 cm # low Q^2 tagger
#/vis/viewer/set/targetPoint 0.472 0 -37.995 meter # Q3eR magnet

#
# Specify zoom value:
#/vis/viewer/zoom 2.
#
# Specify style (surface, wireframe, auxiliary edges,...)
#/vis/viewer/set/style wireframe
#/vis/viewer/set/auxiliaryEdge true
#/vis/viewer/set/lineSegmentsPerCircle 100
#
# Draw coordinate axes:
#/vis/scene/add/axes 0 0 -20.75 1 meter # exit window
#/vis/scene/add/axes 0 0 -3185 10.5 cm
#/vis/scene/add/axes 0 0 0 0.2 m
#/vis/scene/add/axes 0.4 0 -27 0.1 meter # low Q^2 tagger
#/vis/scene/add/axes 0.267 0 -27 0.1 meter # beam along the tagger
#
#
# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
#/vis/scene/add/trajectories rich
/vis/modeling/trajectories/create/drawByCharge
/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 1
#/vis/modeling/trajectories/drawByCharge-0/default/setLineWidth 2
# (if too many tracks cause core dump => /tracking/storeTrajectory 0)
#
# Draw hits at end of event:
#/vis/scene/add/hits
#
#/vis/filtering/trajectories/create/encounteredVolumeFilter
#/vis/filtering/trajectories/encounteredVolumeFilter-0/add top_p
#/vis/filtering/trajectories/encounteredVolumeFilter-0/invert true

# To draw only gammas:
#/vis/filtering/trajectories/create/particleFilter
#/vis/filtering/trajectories/particleFilter-0/add e-
#
# To invert the above, drawing all particles except gammas,
# keep the above two lines but also add:
#/vis/filtering/trajectories/particleFilter-0/invert true
#
# Many other options are available with /vis/modeling and /vis/filtering.
# For example, to select colour by particle ID:
#/vis/modeling/trajectories/create/drawByParticleID
#/vis/modeling/trajectories/drawByParticleID-0/default/setDrawStepPts true
# To select or override default colours (note: e+ is blue by default):
#/vis/modeling/trajectories/list
#/vis/modeling/trajectories/drawByParticleID-0/set e+ yellow
#
# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate
#
# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings
#
# For file-based drivers, use this to create an empty detector view:
#/vis/viewer/flush
